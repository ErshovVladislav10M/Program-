# Фомина Виктория, 344 группа, вычислительные методы
# вариант 12
# Задание 11.6


import numpy


# Метод Жордана - обратная матрица
def inv(A):
    inv_A = [[1, 0, 0], [0, 1, 0], [0, 0, 1]]
    a = A[1][0] / A[0][0]
    for i in range(3):
        A[1][i] -= A[0][i] * a
        inv_A[1][i] -= inv_A[0][i] * a
    a = A[2][0] / A[0][0]
    for i in range(3):
        A[2][i] -= A[0][i] * a
        inv_A[2][i] -= inv_A[0][i] * a
    a = A[2][1] / A[1][1]
    for i in range(3):
        A[2][i] -= A[1][i] * a
        inv_A[2][i] -= inv_A[1][i] * a
    for i in range(3):
        a = A[i][i]
        for j in range(3):
            A[i][j] /= a
            inv_A[i][j] /= a

    a = A[1][2] / A[2][2]
    for i in range(3):
        A[1][i] -= A[2][i] * a
        inv_A[1][i] -= inv_A[2][i] * a
    a = A[0][2] / A[2][2]
    for i in range(3):
        A[0][i] -= A[2][i] * a
        inv_A[0][i] -= inv_A[2][i] * a
    a = A[0][1] / A[1][1]
    for i in range(3):
        A[0][i] -= A[1][i] * a
        inv_A[0][i] -= inv_A[1][i] * a

    return inv_A


# Метод Гаусса - решение Ax = b
def solut(A, b):
    a = A[1][0] / A[0][0]
    for i in range(3):
        A[1][i] -= A[0][i] * a
    b[1] -= b[0] * a
    a = A[2][0] / A[0][0]
    for i in range(3):
        A[2][i] -= A[0][i] * a
    b[2] -= b[0] * a
    a = A[2][1] / A[1][1]
    for i in range(3):
        A[2][i] -= A[1][i] * a
    b[2] -= b[1] * a

    x3 = b[2] / A[2][2]
    x2 = (b[1] - x3 * A[1][2]) / A[1][1]
    x1 = (b[0] - x2 * A[0][1] - x3 * A[0][2]) / A[0][0]
    return [x1, x2, x3]


# LU разложение - нахождение определителя
def det(A):
    L = [[0, 0, 0], [0, 0, 0], [0, 0, 0]]
    U = [[1, 0, 0], [0, 1, 0], [0, 0, 1]]
    L[0][0] = A[0][0]
    L[1][0] = A[1][0]
    L[2][0] = A[2][0]
    U[0][1] = A[0][1] / L[0][0]
    U[0][2] = A[0][2] / L[0][0]
    L[1][1] = A[1][1] - L[1][0] * U[0][1]
    U[1][2] = (A[1][2] - L[1][0] * U[0][2]) / L[1][1]
    L[2][1] = A[2][1] - L[2][0] * U[0][1]
    L[2][2] = A[2][2] - L[2][0] * U[0][2] - L[2][1] * U[1][2]
    return L[0][0] * L[1][1] * L[2][2]


def main():

    A = numpy.array([[12.951443, 1.554567, -3.998582], 
                     [1.554567, 9.835076, 0.930339],
                     [-3.998582, 0.930339, 7.80380]])
    b = numpy.array([4.03171, 11.5427, 6.73485])

    print('Матрица А')
    print(A)
    print('Вектор b')
    print(b)
    print('\nРешение Ax = b')
    x = solut(A, b)
    print(x)

    A = numpy.array([[12.951443, 1.554567, -3.998582], 
                     [1.554567, 9.835076, 0.930339],
                     [-3.998582, 0.930339, 7.80380]])
    print('\nОбратная матрица к А')
    A1 = numpy.array(inv(A))
    print(A1)

    A = numpy.array([[12.951443, 1.554567, -3.998582], 
                     [1.554567, 9.835076, 0.930339],
                     [-3.998582, 0.930339, 7.80380]])
    print('\nОпределитель матрицы А')
    print(det(A))


if __name__ == '__main__':
    main()
