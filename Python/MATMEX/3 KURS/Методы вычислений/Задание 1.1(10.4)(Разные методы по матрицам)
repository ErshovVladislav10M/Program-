# Задание 10.4 вариант 5


# Метод Жордана - обратная матрица
def inv(A):
    inv_A = [[1, 0], [0, 1]]
    A[0][1] /= A[0][0]
    inv_A[0][0] /= A[0][0]
    A[0][0] = 1
    A[1][1] -= A[0][1] * A[1][0]
    inv_A[1][0] -= inv_A[0][0] * A[1][0]
    A[1][0] = 0
    inv_A[1][0] /= A[1][1]
    inv_A[1][1] /= A[1][1]
    A[1][1] = 1

    inv_A[0][0] -= A[0][1] * inv_A[1][0]
    inv_A[0][1] -= A[0][1] * inv_A[1][1]
    A[0][1] = 0
    return inv_A

    # det_A = A[0][0] * A[1][1] - A[0][1] * A[1][0]
    # if(det_A == 0): exit(1)
    # tmp = A[0][0]
    # A[0][0] = A[1][1]
    # A[1][1] = tmp
    # inv_A = A
    # inv_A[0][0] /= det_A
    # inv_A[1][0] /= det_A
    # inv_A[0][1] /= det_A
    # inv_A[1][1] /= det_A
    # return inv_A


# Метод Гаусса - решение Ax = b
def solut(A, b):
    if(A[0][0] != 0):
        a = A[1][0] / A[0][0]
        A[1][1] -= a * A[0][1]
        b[1] -= a * b[0]
        A[1][0] = 0
        if(A[1][1] != 0):
            x2 = b[1] / A[1][1]
            x1 = (b[0] - x2 * A[0][1]) / A[0][0]
        else: exit(1)
        return [x1, x2]
    if(A[1][0] != 0):
        a = A[0][0] / A[1][0]
        A[0][1] -= a * A[1][1]
        b[0] -= a * b[1]
        A[0][0] = 0
        if(A[0][1] != 0):
            x2 = b[0] / A[0][1]
            x1 = (b[1] - x2 * A[1][1]) / A[1][0]
        else: exit(1)
        return [x1, x2]
    exit(1)

    # if(A[1][1] * A[0][0] - A[1][0] * A[0][1] == 0): exit(1)
    # x2 = (A[0][0] * b[1] - A[1][0] * b[0]) / (A[1][1] * A[0][0] - A[1][0] * A[0][1])
    # x1 = (b[0] - A[0][1] * x2) / A[0][0]
    # return [x1, x2]


# LU разложение - нахождение определителя
def comp_det(A):
    L = [[0, 0], [0, 0]]
    U = [[1, 0], [0, 1]]
    L[0][0] = A[0][0]
    L[1][0] = A[1][0]
    U[0][1] = A[0][1] / A[0][0]
    L[1][1] = A[1][1] - L[1][0] * U[0][1]
    return L[0][0] * L[1][1]


# Вычисление нормы матрицы
def comp_norm(A):
    ans = 0
    for i in range(len(A)):
        for j in range(len(A[i])):
            ans += A[i][j] ** 2
    return ans ** 0.5


A = [[-401.46, 200.18], [1201.08, -601.64]]
b = [200, -600]
b1 = [199, -601]

print('Решение Ax = b')
x = solut(A, b)
print(x)
print('\nРешение Ax = b1')
x1 = solut(A, b1)
print(x1)
print('\nCond(A)')
print(comp_norm(A) * comp_norm(inv(A)))
print('\nПогрешность')
ans = 0
ans += (x[0] - x1[0]) ** 2 + (x[1] - x1[1]) ** 2
ans /= x[0] ** 2 + x[1] ** 2
print(ans)
