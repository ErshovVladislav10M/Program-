from controller import Robot
from controller import Emitter
from controller import Receiver
from random import randint
import math
import struct   


# create the Robot instance.
robot = Robot()


# get the time step of the current world.
timestep = int(robot.getBasicTimeStep())


# initialize emmiters    
emit = robot.getEmitter('emit')

emit_main = robot.getEmitter('emit_main')

# Вводим количество членов группы не включая самого робота (т.е. n-1)
k = 2

# initialize receiver 
rec = []  
for i in range(k):
    rec.append(robot.getReceiver('rec' + str(i + 1)))
    rec[i].enable(timestep)
    
rec_main = robot.getReceiver('rec_main')
rec_main.enable(timestep)


bearing = 0
q = 0


# Main loop:
while robot.step(timestep) != -1:
    
    # Принимаем сообщение от основного микрочипа
    if rec_main.getQueueLength() > 0:
        message = rec_main.getData()
        dataList = struct.unpack("dd", message)
        bearing = dataList[0]
        q = dataList[1]
        rec_main.nextPacket()
    print(bearing)
    
    # Передаем сообщение соседям
    message = struct.pack("dd", bearing, q)
    emit.send(message)
    
    # Принимаем сообщение от соседей
    bearingn = [[0] * k, [0] * k]
    for i in range(k):
        if rec[i].getQueueLength() > 0:
            message = rec[i].getData()
            dataList = struct.unpack("dd", message)
            bearingn[i][0] = dataList[0]
            bearingn[i][1] = dataList[1]
            rec[i].nextPacket()
    #print("Robot", *bearingn)
    
    # Перадаем сообщение на основной микрочип
    for i in range(k):
        message = struct.pack("dd", bearingn[i][0], bearingn[i][1])          
        emit_main.send(message)
